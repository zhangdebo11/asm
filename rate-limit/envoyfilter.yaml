---
apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  labels:
    app: ratelimit-demo
  name: filter-ratelimit
spec: 
  configPatches:
  - applyTo: HTTP_FILTER
    match:
      context: SIDECAR_INBOUND
      listener:
        filterChain:
          filter:
            name: envoy.filters.network.http_connection_manager
            subFilter:
              name: envoy.filters.http.router
    patch:
      operation: INSERT_BEFORE
      value:
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.http.ratelimit.v3.RateLimit
          domain: example-ratelimit # must match domain in ratelimit ConfigMap
          failure_mode_deny: false # run plugin in fail-open mode, no limiting happens if ratelimit is unavailable           rate_limit_service:
          rate_limit_service:
            grpc_service: 
              envoy_grpc:
                cluster_name: rate_limit_service
                # timeout: 0.25s
        name: envoy.rate_limit
  - applyTo: CLUSTER
    match:
      cluster:
        service: ratelimit
    patch:
      operation: ADD
      value:
        connect_timeout: 0.25s
        load_assignment:
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: ratelimit # ratelimit Service name
                    port_value: 42081 # and port exposed by the Service
        # hosts:
        # - socket_address:
        #     address: ratelimit-demo-ratelimit # ratelimit Service name
        #     port_value: 42081 # and port exposed by the Service
        http2_protocol_options: {}
        lb_policy: ROUND_ROBIN 
        name: rate_limit_service
        type: STRICT_DNS 
  workloadSelector:
    labels:
      app: ratelimit-demo

---
apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  labels: 
    app: ratelimit-demo
  name: filter-ratelimit-actions
spec: 
  configPatches: 
  - applyTo: VIRTUAL_HOST
    match:
      context: SIDECAR_INBOUND
      routeConfiguration:
        vhost:
          name: inbound|http|80 # port must be a port your Service is listening on
    patch: 
      operation: MERGE
      value:
        rate_limits:
        - actions:
          - header_value_match:
              descriptor_value: path
              headers:
              - name: :path
                prefix_match: /middleware
        - actions:
          - header_value_match:
              descriptor_value: get
              headers:
              - name: :method
                prefix_match: GET
          - request_headers:
              descriptor_key: service
              header_name: x-service
  workloadSelector:
    labels:
      app: ratelimit-demo-app # label used to identify pods running your applications
